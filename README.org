#+TITLE: React-boil 

Cutting edge PWA ready React.js Boilerplate. 
This is created as a template for my cookie cutter called [[http://github.com/cescoferraro/react-boiler][react-boiler]].
The goal here is to enable developers, a.k.a. me, deliver tommorow's web today.

👀 `[[https://github.com/facebook/react][react]]` as the view

🚄 `[[https://expressjs.com/][express]]` server.

🔥 [[http://redux.js.org/docs/introduction/][Redux]] store ready! All the cool tooling and extensions.

🔀 `[[https://github.com/faceyspacey/redux-first-router/issues][redux-first-router]]` the proper way to handle the URL on a Redux App 

🔥 [[https://firebase.google.com/][Firebase]] totally integrated! Redux store ready! Google Infrastuture ready to ship!

🚀 [[https://github.com/redux-observable/redux-observable][Redux-Observable]] to perform async redux actions.
    
🌍 [[https://facebook.github.io/react/docs/react-dom-server.html][Server Side Rendering]] because its 2017.

💩 [[https://github.com/facespacey/webpack-flush-chunks][webpack-flush-chunks]] frameworkless CodeSplitting & SSR FULL CONTROL   

🖌 [[https://github.com/postcss/postcss][PostCSS]] lets you use next css syntax now.

🖌 [[https://github.com/kriasoft/isomorphic-style-loader][Extract-Css-Chunks]] injects only css critical path to the website.

🌍 [[https://github.com/supasate/connected-react-router][Connected-react-router]] syncs the react-router state inside redux store

📦 All source is bundled using [[https://webpack.js.org/configuration/][Webpack v3]].

🔥 Extreme live development using [[https://webpack.js.org/configuration/][webpack]] standard tooling like [[https://github.com/60frames/webpack-hot-server-middleware][webpack-hot-server-middleware]] &  [[https://github.com/glenjamin/webpack-hot-middleware][webpack-hot-middleware]].

🍃 Tree-shaking, courtesy of Webpack.

🎛 Preconfigured to support development and optimised production builds.

🤖 [[https://github.com/webpack/docs/wiki/list-of-plugins#dllplugin][Vendor DLL]] for smooth development experiences.

🚀 Full ES2017+ support + Strict Types. Thanks [[https://www.typescriptlang.org/][Typescript]] 

👏🏽 [[https://github.com/s-panferov/awesome-typescript-loader][awesome-typescript-loader]] and its caching capibilities.  
  
🏜 Asset bundling support. e.g. images/fonts.

✂️ Code splitting - Thanks to 💩  [[https://github.com/facespacey/webpack-flush-chunks][webpack-flush-chunks]]

😎 Progressive Web Application ready, with offline support, via a Service Worker. -- NOT YET IMPLEMENTED --
  
* TODO Things Left to Do 

  🎭 `jest` as the test framework. -- YET TO BE IMPLEMENTED --



